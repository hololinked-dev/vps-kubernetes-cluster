apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: external-load-balancer
deploy:
  # dont forget to export the kube context
  helm:
    releases:
    - name: ingress-nginx
      repo: https://kubernetes.github.io/ingress-nginx
      remoteChart: ingress-nginx
      version: 4.11.2
      setValues:
        controller:
          service:
            type: LoadBalancer
            externalTrafficPolicy: Local
          ingressClassResource:
            enabled: true
            name: nginx
      setValueTemplates:
        controller.service.externalIPs: 
          - "{{ .MAIN_NODE_IP }}"
        controller.ingressClassResource.controllerValue: "{{ .TOP_LEVEL_DOMAIN/ingress-nginx }}"
      namespace: default
      wait: true


---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: cert-manager
deploy:
  # dont forget to export the kube context
  helm:
    releases:
    - name: cert-manager
      repo: https://charts.jetstack.io
      remoteChart: cert-manager
      version: "v1.17.0"
      namespace: cert-manager
      createNamespace: true
      setValues:
        crds:
          enabled: true

    - name: cluster-issuer-prod
      chartPath: cluster/manifests/helm/cert-issuer
      namespace: default
      setValues:
        nameOverride: cluster-issuer-prod
        fullnameOverride: cluster-issuer-prod
        enabled: true
      setValueTemplates:
        email: "{{ .ADMIN_EMAIL }}"
      dependsOn: ["cert-manager"]
    
    - name: cluster-issuer-staging
      chartPath: cluster/manifests/helm/cert-issuer
      namespace: default
      setValues:
        nameOverride: cluster-issuer-staging
        fullnameOverride: cluster-issuer-staging
        enabled: true
        environment: test
      setValueTemplates:
        email: "{{ .ADMIN_EMAIL }}"
      dependsOn: ["cert-manager"]


--- 
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: kubernetes-dashboard
deploy:
  # dont forget to export the kube context
  helm:
    releases:
    - name: kubernetes-dashboard
      repo: https://kubernetes.github.io/dashboard
      remoteChart: kubernetes-dashboard  
      version: 7.13.0
      namespace: tools
      createNamespace: true
      setValues:
        app:
          ingress:
            enabled: true
            ingressClassName: nginx
            issuer:
              name: letsencrypt-prod
              scope: cluster
            tls:
              enabled: true
              secretName: kubernetes-dashboard-tls
      setValueTemplates:
        app.ingress.hosts:
          - "{{ printf \"cluster.%s\" .TOP_LEVEL_DOMAIN }}"


---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: plausible-analytics
deploy:
  helm:
    releases:
    - name: plausible-analytics
      chartPath: cluster/manifests/helm/plausible-analytics
      namespace: tools
      createNamespace: true
      setValues:     
        ingress:
          enabled: true
          className: nginx         
          annotations:
            cert-manager\.io/cluster-issuer: letsencrypt-prod           
      setValueTemplates:
        ingress:
          tls:
            - hosts:
              - "{{ printf \"plausible.%s\" .TOP_LEVEL_DOMAIN }}"
              secretName: plausible-analytics-tls
          hosts:
          - "{{ printf \"plausible.%s\" .TOP_LEVEL_DOMAIN }}"
        # postgresql.auth.password: "{{ .PLAUSIBLE_PASSWORD }}"
        # clickhouse.auth.password: "{{ .PLAUSIBLE_PASSWORD }}"
        # # databaseURL: "{{ printf \"postgresql://plausible:%s@plausible-analytics-postgresql.tools.svc.cluster.local:5432/plausible\" .PLAUSIBLE_PASSWORD }}"
        # clickhouseDatabaseURL: "{{ printf \"http://clickhouse:%s@plausible-analytics-clickhouse.tools.svc.cluster.local:8123/plausible_events_db\" .PLAUSIBLE_PASSWORD }}"


---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: docker-registry
deploy:
  helm:
    releases:
    - name: harbor-docker-registry
      remoteChart: oci://registry-1.docker.io/bitnamicharts/harbor
      version: 26.6.1
      namespace: tools
      createNamespace: true
      setValues:
        exposureType: ingress
        ingress.core.className: nginx
        ingress.core.tls: true
        persistence.persistentVolumeClaim.registry.size: 10Gi
      setValueTemplates:
        externalURL: "{{ printf \"https://container-registry.%s\" .TOP_LEVEL_DOMAIN }}"
        adminPassword: "{{ .HARBOR_ADMIN_PASSWORD }}"
        ingress.core.hostname: "{{ printf \"container-registry.%s\" .TOP_LEVEL_DOMAIN }}"
        ingress.core.annotations:
          cert-manager\.io/cluster-issuer: letsencrypt-test


       